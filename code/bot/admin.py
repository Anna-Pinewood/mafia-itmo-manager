# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
import bot.keyboards as kb

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –º–æ–¥—É–ª–∏ –∏ —Ñ—É–Ω–∫—Ü–∏–∏
from aiogram import Router,F,Bot
from aiogram .types import Message,CallbackQuery
from database.requests import (checkAdmin,checkBan,addBannedUser,delBannedUser,addAdm,delAdm,getUsers,
                               createTable,deleteTable,addToEvent,getEvents,checkEventByName,checkEventById,
                               getDescEventByName,getEventNameById,getCountOfSignUp,getComeUsers,getWontComeUsers)

from aiogram.filters import CommandStart,Filter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State,StatesGroup

from random import choice
from string import ascii_lowercase

# –ß—Ç–æ–±—ã –Ω–µ –ø–∏—Å–∞—Ç—å dispatcher 2-–π —Ä–∞–∑ –∑–∞–º–µ–Ω–∏–º –µ–≥–æ –Ω–∞ —Ä–æ—É—Ç–µ—Ä
admin = Router()

# –°–æ–∑–¥–∞—ë–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å –±–æ—Ç–æ–º,—á—Ç–æ–±—ã –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º –º–æ–∂–Ω–æ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É
bot = Bot(token="token")

# –°–æ–∑–¥–∞—ë–º —Ñ–∏–ª—å—Ç—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–¥–º–∏–Ω–∞
class AdminProtect(Filter):
    async def __call__(self,message : Message):
        return await checkAdmin(message.from_user.id)

# –°–æ–∑–¥–∞—ë–º –∫–ª–∞—Å—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π
class EventCheck(Filter):
    async def __call__(self,message : Message):
        return await checkEventByName(message.text)

# –°–æ–∑–¥–∞—ë–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏
class Mailing(StatesGroup):
    message = State()
    confirm = State()

# –°–æ–∑–¥–∞—ë–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –±–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class BanUser(StatesGroup):
    id = State()

# –°–æ–∑–¥–∞—ë–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ä–∞–∑–±–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class UnBanUser(StatesGroup):
    id = State()

# –°–æ–∑–¥–∞—ë–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞
class AddAdmin(StatesGroup):
    id = State()

# –°–æ–∑–¥–∞—ë–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞
class DelAdmin(StatesGroup):
    id = State()

# –°–æ–∑–¥–∞—ë–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞
class AddEvent(StatesGroup):
    name = State()
    description = State()
    confirm = State()

# –°–æ–∑–¥–∞—ë–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
class DelEvent(StatesGroup):
    id = State()
    confirm = State()

# –°–æ–∑–¥–∞—ë–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
class EventPick(StatesGroup):
    event = State()

# –û–±—Ä–∞–±–æ—Ç–∞–µ–º –∫–æ–º–∞–Ω–¥—É —Å—Ç–∞—Ä—Ç
@admin.message(AdminProtect(),CommandStart())
async def showAdminMenu(message : Message):
    await message.answer_sticker("CAACAgIAAxkBAAEFm5ZmTgIqpv3A8pzMD_lR3EsFPA0u8gACXAwAAj0zCEiRSKTz6TfmmDUE")
    await message.answer(f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å,{message.from_user.first_name}!",reply_markup=kb.adminMenu)

# –û–±—Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∞–¥–º–∏–Ω.–ø–∞–Ω–µ–ª—å
@admin.message(AdminProtect(),F.text == "‚öôÔ∏è–ê–¥–º–∏–Ω.–ø–∞–Ω–µ–ª—å")
async def showAdminPanel(message : Message):
    await message.answer("–û—Ç–∫—Ä—ã–≤–∞—é –∞–¥–º–∏–Ω.–ø–∞–Ω–µ–ª—å",reply_markup=kb.adminPanel)

# –û–±—Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
@admin.message(AdminProtect(),F.text == "ü§ñ–ù–∞–∑–∞–¥")
async def btnBackClick(message : Message):
    await message.answer("–û—Ç–∫—Ä—ã–≤–∞—é –º–µ–Ω—é",reply_markup=kb.adminMenu)

# –û–±—Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∑–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@admin.message(AdminProtect(),F.text == "üö´–ó–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
async def btnBanClick(message : Message,state : FSMContext):
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –æ–∂–∏–¥–∞–µ–º –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ–æ–±—â–µ–Ω–∏–µ
    await state.set_state(BanUser.id)
    await message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...",reply_markup=kb.adminCancelMarkup)

# –û–±—Ä–∞–±–æ—Ç–∞–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω–∞
@admin.message(F.text == "‚ùå–û—Ç–º–µ–Ω–∞")
async def btnCancelClick(message : Message,state : FSMContext):
    # –í—ã—Ö–æ–¥–∏–º –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    await message.answer("–û—Ç–º–µ–Ω—è—é –¥–µ–π—Å—Ç–≤–∏–µ",reply_markup=kb.adminPanel)
    await state.clear()

# –ü—Ä–∏–Ω–∏–º–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –±–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@admin.message(BanUser.id)
async def waitBanMessage(message : Message,state : FSMContext):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å
    if message.text != None and message.text.isdigit():
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–±–∞–Ω–µ–Ω-–ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        if await checkBan(message.text):
            await message.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –±–∞–Ω–µ!",reply_markup=kb.adminPanel)
            await state.clear()
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —è–≤—è–ª–µ—Ç—Å—è-–ª–∏ –∞–¥–º–∏–Ω–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        elif await checkAdmin(message.text):
            await message.answer("–ù–µ–ª—å–∑—è –∑–∞–±–∞–Ω–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!",reply_markup=kb.adminPanel)
            await state.clear()
        else:
            # –í–Ω–æ—Å–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–∞–±–ª–∏—Ü—É 
            await message.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–∞–Ω–µ–Ω!",reply_markup=kb.adminPanel)
            await addBannedUser(message.text)
            await state.clear()
    else:
        await message.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑!")

# –û–±—Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∑–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@admin.message(AdminProtect(),F.text == "‚úÖ–†–∞–∑–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
async def btnUnBanClick(message : Message,state : FSMContext):
    await state.set_state(UnBanUser.id)
    await message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...",reply_markup=kb.adminCancelMarkup)

# –ü—Ä–∏–Ω–∏–º–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞–∑–±–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@admin.message(UnBanUser.id)
async def waitUnBanMessage(message : Message,state : FSMContext):
    if message.text != None and message.text.isdigit():
        if await checkBan(message.text):
            await message.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–±–∞–Ω–µ–Ω!",reply_markup=kb.adminPanel)
            await delBannedUser(message.text)
            await state.clear()
        else:
            await message.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω!",reply_markup=kb.adminPanel)
            await addBannedUser(message.text)
            await state.clear()
    else:
        await message.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑!")

# –û–±—Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –¥–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞
@admin.message(AdminProtect(),F.text == "‚ûï–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞")
async def btnaddAdmClick(message : Message,state : FSMContext):
    await state.set_state(AddAdmin.id)
    await message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...",reply_markup=kb.adminCancelMarkup)

# –ü—Ä–∏–Ω–∏–º–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞
@admin.message(AddAdmin.id)
async def waitAddAdminMessage(message : Message,state : FSMContext):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å
    if message.text != None and message.text.isdigit():
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —è–≤—è–ª–µ—Ç—Å—è-–ª–∏ –∞–¥–º–∏–Ω–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        if await checkAdmin(message.text):
            await message.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–æ–º!",reply_markup=kb.adminPanel)
            await state.clear()
        else:
            await message.answer("–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¥–æ–±–∞–≤–ª–µ–Ω!",reply_markup=kb.adminPanel)
            await addAdm(message.text)
            await state.clear()
    else:
        await message.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑!")

# –û–±—Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —É–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∞
@admin.message(AdminProtect(),F.text == "‚ûñ–£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∞")
async def btnDelAdmClick(message : Message,state : FSMContext):
   await state.set_state(DelAdmin.id)
   await message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...",reply_markup=kb.adminCancelMarkup)
  
# –ü—Ä–∏–Ω–∏–º–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞
@admin.message(DelAdmin.id)
async def waitDelAdminMessage(message : Message,state : FSMContext):
    if message.text != None and message.text.isdigit():
        if await checkAdmin(message.text):
            await message.answer("–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–¥–∞–ª—ë–Ω!",reply_markup=kb.adminPanel)
            await delAdm(message.text)
            await state.clear()
        else:
            await message.answer("–ù–µ—Ç —Ç–∞–∫–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!",reply_markup=kb.adminPanel)
            await state.clear()
    else:
        await message.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑!")

# –û–±—Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É
@admin.message(AdminProtect(),F.text == "üó£Ô∏è–°–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É")
async def btnMailingClick(message : Message,state : FSMContext):
    await state.set_state(Mailing.message)
    await message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏...",reply_markup=kb.adminCancelMarkup)

# –û–±—Ä–∞–±–æ—Ç–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏
@admin.message(Mailing.message)
async def waitMailingMessage(message : Message,state : FSMContext):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å
    if message.text != None:
        # –°–æ—Ö—Ä–∞—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø—Ä–æ—Å–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É
        await state.update_data(message = message.text)
        await message.answer(f"–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫—É —Ä–∞—Å—Å—ã–ª–∫–∏!\n–¢–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏ : {message.text}",reply_markup=kb.mailingConfirm)
        await state.set_state(Mailing.confirm)
    else:
        await message.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏!\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑!")

# –û–±—Ä–∞–±–æ—Ç–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è/–æ—Ç–º–µ–Ω—ã —Ä–∞—Å—Å—ã–ª–∫–∏
@admin.callback_query(Mailing.confirm)
async def confirmMailingCallback(callback : CallbackQuery, state : FSMContext):
   if callback.data == "confirm_mailing":
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        users = await getUsers()
        # –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞
        data = await state.get_data()
        mess = data.get("message")
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–∞—Å—Å—ã–ª–∫—É
        for user in users:
            try:
                await bot.send_message(chat_id = user.chat_id,text = mess)
            except:
                pass
        await callback.message.delete()
        await callback.message.answer("–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!",reply_markup=kb.adminPanel)
        await state.clear()
   else:
        await callback.message.delete()
        await callback.message.answer("–û—Ç–º–µ–Ω—è—é —Ä–∞—Å—Å—ã–ª–∫—É!\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!",reply_markup=kb.adminCancelMarkup)
        await state.set_state(Mailing.message)


# –û–±—Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å–æ–∑–¥–∞—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ
@admin.message(AdminProtect(),F.text == "üéá–°–æ–∑–¥–∞—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ")
async def btnCreateEventClick(message : Message,state : FSMContext):
    await state.set_state(AddEvent.name)
    await message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ!",reply_markup=kb.adminCancelMarkup)

# –û–±—Ä–∞–±–æ—Ç–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–º–µ–Ω–µ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
@admin.message(AddEvent.name)
async def waitingCreateEventName(message : Message,state : FSMContext):
    if message.text != None:
        if not(await checkEventByName(message.text)):
            await state.update_data(name = message.text)
            await message.answer("–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è!",reply_markup=kb.adminCancelMarkup)
            await state.set_state(AddEvent.description)
        else:
            await message.answer("–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!",reply_markup=kb.adminPanel)
            await state.clear()
    else:
        await message.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ!\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑!",reply_markup=kb.adminCancelMarkup)

# –û–±—Ä–∞–±–æ—Ç–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–º–µ–Ω–µ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
@admin.message(AddEvent.description)
async def waitingCreateEventDisc(message : Message,state : FSMContext):
    if message.text != None:
        data = await state.get_data()
        name = data.get("name")
        await state.update_data(description = message.text)
        await message.answer(f"–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è!\n–ù–∞–∑–≤–∞–Ω–∏–µ : {name}\n–û–ø–∏—Å–∞–Ω–∏–µ : {message.text}",reply_markup=kb.addEventConfirm)
        await state.set_state(AddEvent.confirm)
    else:
        await message.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ!\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑!",reply_markup=kb.adminCancelMarkup)

# –û–±—Ä–∞–±–æ—Ç–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è/–æ—Ç–º–µ–Ω—ã —Å–æ–∑–¥–∞–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
@admin.callback_query(AddEvent.confirm)
async def confirmAddEventCallback(callback : CallbackQuery, state : FSMContext):
    if callback.data == "confirmAddEvent":
        # –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞
        data = await state.get_data()
        name = data.get("name")
        description = data.get("description")
        for_key = "".join([choice(ascii_lowercase) for _ in range(5)])
        await createTable(for_key)
        await addToEvent(name,description,for_key)
        await callback.message.delete()
        await callback.message.answer("–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ!",reply_markup=kb.adminPanel)
        await state.clear()
    else:
        await callback.message.delete()
        await callback.message.answer("–û—Ç–º–µ–Ω—è—é —Å–æ–∑–¥–∞–Ω–∏–µ!\n–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è!",reply_markup=kb.adminCancelMarkup)
        await state.set_state(AddEvent.name)

# –û–±—Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —É–¥–∞–ª–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ
@admin.message(AdminProtect(),F.text == "üéÜ–£–¥–∞–ª–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ")
async def btnDeleteEventClick(message : Message,state : FSMContext):
    mess : str = ""
    for event in await getEvents():
        mess += f"{event.id}. {event.name}\n"
    if mess:
        await message.answer(f"–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è!\n{mess}",reply_markup=kb.adminCancelMarkup)
        await state.set_state(DelEvent.id)
    else:
        await message.answer("–ù–µ—Ç –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π,–∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å!",reply_markup=kb.adminPanel)
        await state.clear()


# –û–±—Ä–∞–±–æ—Ç–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
@admin.message(DelEvent.id)
async def waitingDeleteEventMessage(message : Message,state : FSMContext):
    if message.text is not None and message.text.isdigit():
        if await checkEventById(message.text):
            await state.update_data(id = message.text)
            await message.answer(f"–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —É–¥–∞–ª–µ–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è!\n{message.text}. {(await getEventNameById(message.text)).name}",reply_markup=kb.delEventConfirm)
            await state.set_state(DelEvent.confirm)
        else:
            await message.answer("–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è —Å —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!",reply_markup=kb.adminPanel)
            await state.clear()
    else:
        await message.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä!\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑!",reply_markup=kb.adminCancelMarkup)

# –û–±—Ä–∞–±–æ—Ç–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è/–æ—Ç–º–µ–Ω—ã —É–¥–∞–ª–µ–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
@admin.callback_query(DelEvent.confirm)
async def confirmDelEventCallback(callback : CallbackQuery, state : FSMContext):
    if callback.data == "confirmDelEvent": # —É–¥–∞–ª—è–µ–º
        data = await state.get_data()
        id = data.get("id")
        await deleteTable(id)
        await callback.message.delete()
        await callback.message.answer("–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ —É–¥–∞–ª–µ–Ω–æ!",reply_markup=kb.adminPanel)
        await state.clear()
    else:
        await callback.message.delete()
        await callback.message.answer("–û—Ç–º–µ–Ω—è—é —É–¥–∞–ª–µ–Ω–∏–µ!\n–í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä!",reply_markup=kb.adminCancelMarkup)
        await state.set_state(DelEvent.id)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∞–∑–∞–¥
@admin.message(AdminProtect(),F.text == "üëà–ù–∞–∑–∞–¥")
async def showAdminMenu(message : Message,state : FSMContext):
    await state.clear()
    await message.answer("–û—Ç–∫—Ä—ã–≤–∞—é –º–µ–Ω—é",reply_markup=kb.adminMenu)

# –û–±—Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –ø–æ –æ–¥–Ω–æ–º—É –∏–∑ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π
@admin.message(AdminProtect(),EventCheck())
async def showEventInfo(message : Message,state : FSMContext):
    await state.set_state(EventPick.event)
    await state.update_data(event = message.text)
    await message.answer_sticker("CAACAgIAAxkBAAEDpPBl1WcOfjU0kJaSf9y882BG36ONiwACMw4AApVxCUiC2Rae9Yv1wzQE",reply_markup=None)
    await message.answer(f"üéâ–ù–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è : {message.text}\nüéä–û–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è : {(await getDescEventByName(message.text)).description}",reply_markup=kb.adminEventPanel) 

# –û–±—Ä–∞–±–æ–∞—Ç–µ–º –Ω–∞–∂–∞—Ç–∏–µ –ø–æ –∫–Ω–æ–ø–∫–µ –∑–∞–ø–∏—Å–∞–≤—à–∏–µ—Å—è
@admin.message(AdminProtect(),F.text == "üë•–ó–∞–ø–∏—Å–∞–≤—à–∏–µ—Å—è")
async def showSignUpUsers(message : Message,state : FSMContext):
    data = await state.get_data()
    event = data.get("event") # –µ—Å–ª–∏ –Ω–∏–∫—Ç–æ –Ω–µ –∑–∞–ø–∏—Å–∞–ª—Å—è —Ç–æ —Ç–∞–∫ –∏ –≤—ã–≤–æ–¥–∏–º # –≤ –∑–∞–ø—Ä–æ—Å–∞—Ö,–µ—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–¥—É—â–∏—Ö —Ä–∞–≤–Ω–æ 0 —Ç–æ —Å–ø–∏—Å–æ–∫ –Ω–µ –Ω—É–∂–µ–Ω
    if list(await getCountOfSignUp(event))[0] == 0:
        await message.answer("–ù–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –Ω–∏–∫—Ç–æ –Ω–µ –∑–∞–ø–∏—Å–∞–ª—Å—è!")
    else:
        await message.answer(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–∞–≤—à–∏—Ö—Å—è : {list(await getCountOfSignUp(event))[0]}\n\n{await getComeUsers(event)}\n\n{await getWontComeUsers(event)}")

